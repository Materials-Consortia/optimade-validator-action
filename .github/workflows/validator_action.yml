name: Test optimade-validator GitHub Action

on:
  pull_request:
  push:
    branches:
    - master
    - 'push-action/**'

jobs:

  validator_regular:
    runs-on: ubuntu-latest
    name: Regular server
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up and run regular server
        run: |
          git clone --recurse-submodules https://github.com/Materials-Consortia/optimade-python-tools
          docker-compose -f ./optimade-python-tools/docker-compose.yml up optimade &
          .github/workflows/wait_for_it.sh localhost:3213 -t 120
          sleep 15

      - name: Run action (validating the unversioned path)
        uses: ./
        with:
          port: 3213
          path: /
          validate unversioned path: yes

      - name: Run action (without validating the unversioned path)
        uses: ./
        with:
          port: 3213
          path: /
          validate unversioned path: no

  validator_index:
    runs-on: ubuntu-latest
    name: Index server
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up and run index server
        run: |
          git clone --recurse-submodules https://github.com/Materials-Consortia/optimade-python-tools
          docker-compose -f ./optimade-python-tools/docker-compose.yml up optimade-index &
          .github/workflows/wait_for_it.sh localhost:3214 -t 120
          sleep 15

      - name: Run action
        uses: ./
        with:
          port: 3214
          path: /
          index: yes

  all_versioned_paths:
    runs-on: ubuntu-latest
    name: All versioned paths for regular server
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up and run regular server (which includes all versioned base URLs)
        run: |
          git clone --recurse-submodules https://github.com/Materials-Consortia/optimade-python-tools
          docker-compose -f ./optimade-python-tools/docker-compose.yml up optimade &
          .github/workflows/wait_for_it.sh localhost:3213 -t 120
          sleep 15

      - name: Run action
        uses: ./
        with:
          port: 3213
          path: /
          all versioned paths: yes
          validate unversioned path: yes

      - name: Run action (setting path to empty string)
        uses: ./
        with:
          port: 3213
          path: ""
          all versioned paths: yes
          validate unversioned path: yes

  bats:
    runs-on: ubuntu-latest
    name: Run BATS test suite for entrypoint.sh
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Build BATS environment
        run: docker build -t optimade_bats ./tests

      - name: Run BATS tests
        run: ./run_tests.sh

  validator_version:
    runs-on: ubuntu-latest
    name: Use validator from git commit sha
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up and run regular server
        run: |
          git clone --recurse-submodules https://github.com/Materials-Consortia/optimade-python-tools
          docker-compose -f ./optimade-python-tools/docker-compose.yml up optimade &
          .github/workflows/wait_for_it.sh localhost:3213 -t 120
          sleep 15

      - name: Run action
        uses: ./
        with:
          port: 3213
          path: /
          validator version: c6551e27f64abdaa94afd401db22af9ef2afd23d

  validator_version_fail:
    runs-on: ubuntu-latest
    name: Use validator with wrong version
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up and run regular server
        run: |
          git clone --recurse-submodules https://github.com/Materials-Consortia/optimade-python-tools
          docker-compose -f ./optimade-python-tools/docker-compose.yml up optimade &
          .github/workflows/wait_for_it.sh localhost:3213 -t 120
          sleep 15

      - name: Run action
        id: action
        continue-on-error: true
        uses: ./
        with:
          port: 3213
          path: /
          validator version: "0.0.0"

      - name: This runs ONLY if 'Run action' doesn't fail as expected
        if: steps.action.outcome != 'failure' || steps.action.conclusion != 'success'
        run: |
          echo "Outcome: ${{ steps.action.outcome }} (not 'failure'), Conclusion: ${{ steps.action.conclusion }} (not 'success')"
          exit 1

  results_output:
    runs-on: ubuntu-latest
    name: Retrieve and check validator results
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Set up Python 3.7
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.7

      - name: Set up and run regular server
        run: |
          git clone --recurse-submodules https://github.com/Materials-Consortia/optimade-python-tools
          docker-compose -f ./optimade-python-tools/docker-compose.yml up optimade &
          .github/workflows/wait_for_it.sh localhost:3213 -t 120
          sleep 15

      - name: Run action to retrieve output
        id: action
        uses: ./
        with:
          port: 3213
          path: /
          create output: true

      - name: Check "default" output
        env:
          RESULTS: "${{ steps.action.outputs.results }}"
        run: python .github/workflows/ci_helper.py default

      - name: Run action with "all versioned paths" to retrieve output
        id: action_all
        uses: ./
        with:
          port: 3213
          path: /
          create output: true
          all versioned paths: true

      - name: Check "all versioned paths" output
        env:
          RESULTS: "${{ steps.action_all.outputs.results }}"
        run: python .github/workflows/ci_helper.py all_versioned_paths

      - name: Run action with "validate unversioned path" to retrieve output
        id: action_unversioned
        uses: ./
        with:
          port: 3213
          path: /
          create output: true
          validate unversioned path: true

      - name: Check "validate unversioned path" output
        env:
          RESULTS: "${{ steps.action_unversioned.outputs.results }}"
        run: python .github/workflows/ci_helper.py validate_unversioned_path

      - name: Run action with "as type" to retrieve output
        id: action_astype
        uses: ./
        with:
          port: 3213
          path: /v1.1/structures
          create output: true
          as type: structures

      - name: Check "as type" output
        env:
          RESULTS: "${{ steps.action_astype.outputs.results }}"
        run: python .github/workflows/ci_helper.py as_type
